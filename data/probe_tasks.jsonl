{"task_id": "ioi_minimal", "domain": "reasoning", "description": "Indirect object identification style prompts with swapped names.", "source": {"type": "prompt_list", "prompts": ["Alice gave Bob a bright blue kite after the festival. Bob surprised Alice by thanking her with flowers. Question: Who gave Bob the kite?", "Maria sent Daniel a careful memo, but Daniel forwarded it to Lucas. Question: Who originally sent Daniel the memo?", "Gina emailed Priya the draft, then Priya forwarded it to Omar. Question: Who emailed Priya the draft?", "Jordan passed Taylor the torch during the relay before Taylor passed it to Casey. Question: Who handed Taylor the torch?"]}, "max_tokens": 192}
{"task_id": "toy_arithmetic", "domain": "math", "description": "Two- and three-digit addition and subtraction drills.", "source": {"type": "prompt", "text": "Solve each problem and provide the numeric answer only.\n12 + 37 =\n245 - 118 =\n63 + 19 =\n407 - 256 =\n88 + 205 ="}, "max_tokens": 160, "repeat": 3}
{"task_id": "ner_sample", "domain": "ner", "description": "Short sentences with named entities for POS/NER probing.", "source": {"type": "prompt_list", "prompts": ["Barack Obama met Angela Merkel in Berlin to discuss climate policy.", "The discovery by Marie Curie in Paris transformed modern chemistry.", "Amazon opened a new logistics center near Seattle last quarter.", "Lionel Messi scored twice against Real Madrid at Camp Nou."]}, "max_tokens": 160}
{"task_id": "induction_sequence", "domain": "reasoning", "description": "Synthetic induction sequences with repeating patterns.", "source": {"type": "prompt_list", "prompts": ["Consider the sequence: ABABABABAB. Continue it for ten more characters.", "Pattern: 123-123-123-123. Extend the pattern with the next twelve digits.", "Repeat the motif 'red blue green' five more times starting now."]}, "max_tokens": 128}
{"task_id": "python_doc", "domain": "code", "description": "Docstring-style prompts covering control flow and data structures.", "source": {"type": "prompt", "text": "You are reviewing Python utility functions. Provide concise docstrings.\n\nFunction: def rolling_average(values: list[float], window: int) -> list[float]\n\nFunction: def top_k(items: list[tuple[str, float]], k: int) -> list[str]\n\nFunction: def chunked(iterable: Iterable[T], size: int) -> Iterator[list[T]]"}, "max_tokens": 256, "repeat": 2}
{"task_id": "wikitext_val_small", "domain": "prose", "description": "Two documents from WikiText-103 validation for long-form prose.", "source": {"type": "dataset", "name": "wikitext", "config": "wikitext-103-raw-v1", "split": "validation", "text_key": "text", "num_docs": 2}, "max_tokens": 512}
